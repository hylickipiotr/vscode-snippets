{
  "Arrow function component": {
    "prefix": "afc",
    "body": [
      "import React from \"react\";",
      "",
      "const ${TM_FILENAME_BASE/(.)/${1:/upcase}/}: React.FC = () => {",
      "  return <div>$1</div>;",
      "};",
      "",
      "export default ${TM_FILENAME_BASE/(.)/${1:/upcase}/};",
      ""
    ]
  },
  "Arrow function component interface": {
    "prefix": "afci",
    "body": [
      "import React from \"react\";",
      "",
      "export interface ${TM_FILENAME_BASE/(.)/${1:/upcase}/}Props {",
      "  $1",
      "}",
      "",
      "const ${TM_FILENAME_BASE/(.)/${1:/upcase}/}: React.FC<${TM_FILENAME_BASE/(.)/${1:/upcase}/}Props> = ({$2}) => {",
      "  return <div>$3</div>;",
      "};",
      "",
      "export default ${TM_FILENAME_BASE/(.)/${1:/upcase}/};",
      ""
    ]
  },
  "Create context": {
    "prefix": "cc",
    "body": [
      "import React, { createContext, useContext } from \"react\";",
      "",
      "export interface ${TM_FILENAME_BASE/(.)/${1:/upcase}/}ContextValue {}",
      "",
      "export interface ${TM_FILENAME_BASE/(.)/${1:/upcase}/}ProviderProps {}",
      "",
      "export const ${TM_FILENAME_BASE/(.)/${1:/upcase}/}Context = createContext<${TM_FILENAME_BASE/(.)/${1:/upcase}/}ContextValue | null>(",
      "  null",
      ");",
      "",
      "export const ${TM_FILENAME_BASE/(.)/${1:/upcase}/}Provider: React.FC<${TM_FILENAME_BASE/(.)/${1:/upcase}/}ProviderProps> = ({",
      "  ...props",
      "}) => {",
      "  return <${TM_FILENAME_BASE/(.)/${1:/upcase}/}Context.Provider value={{}} {...props} />;",
      "};",
      "",
      "export const ${TM_FILENAME_BASE/(.)/${1:/upcase}/}Consumer = ${TM_FILENAME_BASE/(.)/${1:/upcase}/}Context.Consumer;",
      "",
      "export const use${TM_FILENAME_BASE/(.)/${1:/upcase}/} = () => {",
      "  const ${TM_FILENAME_BASE/(.)/${1:/down}/} = useContext(${TM_FILENAME_BASE/(.)/${1:/upcase}/}Context);",
      "",
      "  if (!!!${TM_FILENAME_BASE/(.)/${1:/down}/}) {",
      "    throw new Error(",
      "      \"${TM_FILENAME_BASE/(.)/${1:/upcase}/} context is undefined, please verify you are calling ,use${TM_FILENAME_BASE/(.)/${1:/upcase}/}() as child of a <${TM_FILENAME_BASE/(.)/${1:/upcase}/}Provider> component.\"",
      "    );",
      "  }",
      "",
      "  return ${TM_FILENAME_BASE/(.)/${1:/down}/};",
      "};",
      ""
    ]
  }
}
